package ${package.Controller};

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import ${commonPackage}.CommonResult;
import ${facadePackage}.dto.${entity}DTO;
import ${managerPackage}.converter.${entity}Converter;
<% if(isNotEmpty(superControllerClassPackage)){ %>
import ${superControllerClassPackage};
<% } %>
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import javax.validation.Valid;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import lombok.RequiredArgsConstructor;

import java.util.List;

/**
 * <p>
 * ${table.comment!} Controller
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Validated
@RestController
@RequestMapping("<% if(isNotEmpty(moduleName)){ %>/${moduleName}<% } %>/${lowEntityName}")
@RequiredArgsConstructor
public class ${entity}Controller <% if(isNotEmpty(superControllerName)){ %>extends ${superControllerName}<% } %> {

    private final ${table.serviceName} ${lowEntityName}Service;

    @ApiOperation("获取分页")
    @GetMapping("/page")
    public CommonResult<PageInfo<${entity}>> page(@RequestParam(name = "pageNo", defaultValue = "1", required = false) Integer pageNo,
                                              @RequestParam(name = "pageSize", defaultValue = "10", required = false) Integer pageSize)  {
        PageInfo<${entity}> res = ${lowEntityName}Service.page(pageNo, pageSize);
        return CommonResult.success(res);
    }

    @ApiOperation("列表")
    @GetMapping("/list")
    public CommonResult<List<${entity}>> list() {
        return CommonResult.success(${lowEntityName}Service.list());
    }

    @ApiOperation("详情")
    @GetMapping("/detail")
    public CommonResult<${entity}DTO> detail(@RequestParam Long id) {
        ${entity} res = ${lowEntityName}Service.getById(id);
        return CommonResult.success(${entity}Converter.INSTANCE.to${entity}DTO(res));
    }

    @ApiOperation("新增")
    @PostMapping("/add")
    public void add(@Valid @RequestBody ${entity} ${lowEntityName}) {
        ${lowEntityName}Service.save(${lowEntityName});
    }

    @ApiOperation("更新")
    @PostMapping("/update")
    public void update(@Valid @RequestBody ${entity} ${lowEntityName}) {
        ${lowEntityName}Service.updateById(${lowEntityName});
    }

    @ApiOperation("删除")
    @PostMapping("/delete")
    public void delete(@RequestParam Long id) {
        ${lowEntityName}Service.removeById(id);
    }

}
